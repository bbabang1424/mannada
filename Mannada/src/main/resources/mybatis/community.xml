<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="community">
	<sql id="search">
		SELECT community.*, nickname FROM community
		LEFT OUTER JOIN user ON community.num = user.num
		<where>
			<if test="search == 1">
				title LIKE CONCAT('%', #{keyword}, '%')
			</if>
			<if test="search == 2">
				nickname LIKE CONCAT('%', #{keyword}, '%')
			</if>
			<if test="search == 3">
				content LIKE CONCAT('%', #{keyword}, '%')
			</if>
		</where>
	</sql>

	<select id="total" resultType="Integer">
		SELECT COUNT(*)
		FROM (<include refid="search"></include>) AS community
	</select>


	<select id="list" resultType="community">
		SELECT @ROWNUM:=@ROWNUM+1 AS rnum, community.*
		FROM (<include refid="search"></include>
			ORDER BY id DESC) AS community,
		 (SELECT @ROWNUM:=0) AS R
		ORDER BY rnum DESC
		LIMIT #{offset}, #{perPage}
	</select>

	<select id="mainList_review" resultType="community">
		SELECT community.*
		FROM community
		WHERE category=1
		ORDER BY viewCnt DESC
		LIMIT #{offset}, #{perPage}
	</select>
	
	<select id="mainList_talk" resultType="community">
		SELECT community.*
		FROM community
		WHERE category=2
		ORDER BY viewCnt DESC
		LIMIT #{offset}, #{perPage}
	</select>

	<insert id="add">
		INSERT INTO community
		(num, title, category, reg_date, content)
		VALUES (#{num}, #{title}, #{category}, NOW(), #{content}) 

		<selectKey keyColumn="id" keyProperty="id" resultType="Integer" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>


	<select id="item" resultType="community"> 
		SELECT community.*, nickname, filename, uuid
			, (SELECT count(*) FROM reply WHERE commu_id = #{id}) AS total_reply
		FROM (SELECT *, LAG(id) OVER (ORDER BY id) AS prevId, LEAD(id) OVER (ORDER BY id) AS nextId FROM community) AS community
		LEFT OUTER JOIN user ON community.num = user.num
		LEFT OUTER JOIN profile ON (user.num = profile.num)
		WHERE community.id = #{id}
	</select>


	<update id="update">
		UPDATE community
		SET title = #{title}, content = #{content}, category=#{category}
		WHERE id = #{id}
	</update>


	<delete id="delete">
		DELETE FROM community
		WHERE id = #{id}
	</delete>
	
	<!-- 조회수 증가 -->
	<update id="addViewCnt">
		UPDATE community SET viewCnt = viewCnt + 1
		WHERE id = #{id}
	</update>
	
	
	
	<!-- 댓글 -->	
	
	<select id="total_reply" resultType="Integer">
		SELECT COUNT(*)
		FROM reply
		WHERE commu_id = #{id}
	</select>
	
	<insert id="add_reply">
		INSERT INTO reply(commu_id, num, content, reg_date)
		VALUES(#{commuId}, #{num}, #{content}, NOW())
	</insert>
	
	<!-- 댓글 조회 -->
	<select id="detail_reply" resultType="Reply">
		SELECT reply.*, user.nickname, filename, uuid
		FROM reply 
		LEFT OUTER JOIN user ON reply.num = user.num
		LEFT OUTER JOIN profile ON (user.num = profile.num)
		WHERE commu_id = #{id}
		ORDER BY id DESC
	</select>

	<!-- 댓글 단일 조회 -->
	<select id="item_reply" resultType="Reply">
		SELECT reply.*, user.nickname, filename, uuid
		FROM reply
		LEFT OUTER JOIN user ON reply.num = user.num
		LEFT OUTER JOIN profile ON (user.num = profile.num)
		WHERE reply.id = #{id}
	</select>

	<!-- 댓글 수정 -->
	<update id="update_reply">
		UPDATE reply SET content = #{content}
		WHERE id = #{id}
	</update>

	<!-- 댓글 삭제 -->
	<delete id="delete_reply">
		DELETE FROM reply
		WHERE id = #{id}
	</delete>
	
	<!-- 마이페이지의 댓글 리스트 -->
	<select id="reply_list" resultType="Reply">
		SELECT @ROWNUM:=@ROWNUM+1 AS rnum, reply.*
		FROM reply, (SELECT @ROWNUM:=0) AS R
		WHERE id = #{keyword} 
	</select>

</mapper>