<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<property name="driverClassName" value="org.mariadb.jdbc.Driver"></property>
		
		<property name="jdbcUrl" value="jdbc:mariadb://localhost:3306/mannada"></property>
		<property name="username" value="mannada"></property> 
		<!-- 
		<property name="jdbcUrl" value="jdbc:mariadb://localhost:3306/team2"></property>
		<property name="username" value="team2"></property>
		 -->
		<property name="password" value="1234"></property>
	</bean>
	
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<constructor-arg ref="hikariConfig"></constructor-arg>
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	</bean>
	
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
	</bean>
	
	<!-- 파일 업로드 기능 : 멀티파트 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 옵션지정 : 전체파일업로드 값="10MB" 제한 -->
		<property name="maxUploadSize" value="10485760"></property>
	</bean>
	
	<!-- 트랜젝션 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	
	<!-- 웹소켓 -->
	<bean id="chatServer" class="kr.ac.kopo.mannada.websocket.ChatServer"></bean>	
	
	<websocket:handlers>
		<websocket:mapping handler="chatServer" path="/chatserver"/>
		<websocket:handshake-interceptors>
			<bean class="kr.ac.kopo.mannada.websocket.ChatInterceptor"></bean>
		</websocket:handshake-interceptors>
	</websocket:handlers>
		
		
   <!-- 이메일 인증 관련 빈 등록 -->
   <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
      <property name="host" value="smtp.gmail.com" />
      <property name="port" value="465" />
      <property name="username" value="xyident903@gmail.com" />
      <property name="password" value="nsnyeqkjxwoicker" />
      <property name="javaMailProperties">
         <props>
                <prop key="mail.transport.protocol">smtp</prop>
                <prop key="mail.smtp.auth">true</prop>
                <!-- gmail의 경우 보안문제 업데이트로 인해 SSLSocketFactory를 추가해야 smtp 사용 가능. -->
                <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.debug">true</prop>
                <prop key="mail.smtp.ssl.trust">smtp.gmail.com</prop>
				<prop key="mail.smtp.ssl.protocols">TLSv1.2</prop>
            </props>
      </property>
      
   </bean>
	
</beans>
